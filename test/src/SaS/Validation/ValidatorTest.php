<?php

namespace SaS\Validation;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2013-04-27 at 13:22:12.
 */
class ValidatorTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var RequestValidator
     */
    protected $v;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->v = new RequestValidator('a-Z0-9()&%ยง="\'');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }


    public function testValidateRequired_Failure() {
        $constraints = [
            'foo' => [
                'required' => [1, 'bar'],
            ],
            'bar' => [
                'required' => [2, 'foo'],
            ]
        ];
        $data = [
            'foo' => 'asdf'
        ];
        $validated = $this->v->validate($data, $constraints);
        $this->assertInstanceOf('\Sas\Validation\ValidationFailure', $validated);
        $this->assertEquals([[2, 'foo']], $validated->getErrors());
    }
    

    public function testValidateRequired_Success() {
        $constraints = [
            'foo' => [
                'required' => [1, 'bar'],
            ],
            'bar' => [
                'required' => [2, 'foo'],
            ]
        ];
        $data = [
            'foo' => 'asdf',
            'bar' => 'sdfwet',
        ];
        $validated = $this->v->validate($data, $constraints);
        $this->assertInstanceOf('\Sas\Validation\ValidationSuccess', $validated);
        $this->assertEquals($data, $validated->get());
    }
    
    public function testNoAdditional_Failure() {
        $constraints = [
            'foo' => [
                'required' => [1, 'asdf']
            ]
        ];
        $data = [
            'foo' => 'bar',
            'asdf' => 'his',
        ];
        $validated = $this->v->validate($data, $constraints);
        $this->assertInstanceOf('\SaS\Validation\ValidationFailure', $validated);
        //todo: check for correct error
    }

}
